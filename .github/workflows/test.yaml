name: Test

on:
  - push
  - pull_request
  - workflow_dispatch

env:
  CI: true

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - id: random
        name: Generate UUID
        run: echo "::set-output name=value::$(openssl rand -hex 10)"
      - id: cache
        name: Yarn Cache Dir
        run: echo "::set-output name=value::$(yarn cache dir)"
      - name: Install
        run: yarn
      - name: Prepare Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ runner.os }}-${{ steps.random.outputs.value }}
      - name: Prepare Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache.outputs.value }}
          key: yarn-cache-${{ runner.os }}-${{ steps.random.outputs.value }}-node-14

    outputs:
      random-uuid: ${{ steps.random.outputs.value }}
      cache-dir: ${{ steps.cache.outputs.value }}

  build:
    runs-on: ubuntu-latest
    needs:
      - prepare

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Restore Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ needs.prepare.outputs.cache-dir }}
          key: yarn-cache-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}-node-14
      - name: Install
        run: yarn
      - name: Build JS
        run: yarn compile
      - name: Build DTS
        run: yarn dtsc --listEmittedFiles
      - name: Build Frontend
        run: yarn fe
      - name: Upload Packages
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: |
            packages
            plugins

  lint:
    runs-on: ubuntu-latest
    needs:
      - prepare

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Restore Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ needs.prepare.outputs.cache-dir }}
          key: yarn-cache-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}-node-14
      - name: Install
        run: yarn
      - name: Lint
        run: yarn lint

  unit-test:
    runs-on: ubuntu-latest
    needs:
      - prepare

    strategy:
      fail-fast: false
      matrix:
        node-version: [12, 14, 16, 18]

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ needs.prepare.outputs.cache-dir }}
          key: yarn-cache-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}-node-${{ matrix.node-version }}
          restore-keys: |
            yarn-lock-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}-node
      - name: Install
        run: yarn
      - name: Build JS
        run: yarn compile
      - name: Unit Test
        run: yarn test:json --mongo-ports=27017 --mysql-ports=3306,3307,3308
      - name: Report Coverage
        if: ${{ matrix.node-version == 14 }}
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/coverage-final.json
          name: codecov

  publish:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build
      - unit-test

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Create .npmrc
        run: 'echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc'
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Restore Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ needs.prepare.outputs.cache-dir }}
          key: yarn-cache-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}-node-14
      - name: Install
        run: yarn
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: packages
      - name: Publish
        run: yarn pub

  docs:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Restore Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ needs.prepare.outputs.cache-dir }}
          key: yarn-cache-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}-node-14
      - name: Install
        run: yarn
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: packages
      - name: Checkout koishi-plugin-dialogue
        uses: actions/checkout@v3
        with:
          repository: koishijs/koishi-plugin-dialogue
          path: external/dialogue
      - name: Checkout koishi-plugin-eval
        uses: actions/checkout@v3
        with:
          repository: koishijs/koishi-plugin-eval
          path: external/eval
      - name: Checkout koishi-plugin-github
        uses: actions/checkout@v3
        with:
          repository: koishijs/koishi-plugin-github
          path: external/github
      - name: Create Symlinks
        run: |
          ln -s ../../external/dialogue/docs ./docs/community/dialogue
          ln -s ../../external/eval/docs ./docs/community/eval
          ln -s ../../external/github/docs ./docs/community/github
      - name: Build
        run: yarn docs build
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: docs/.vuepress/dist
          publish_branch: master
          external_repository: koishijs/koishijs.github.io
          force_orphan: true

  docs-next:
    if: ${{ github.ref == 'refs/heads/next' }}
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Restore Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ needs.prepare.outputs.cache-dir }}
          key: yarn-cache-${{ runner.os }}-${{ needs.prepare.outputs.random-uuid }}-node-14
      - name: Install
        run: yarn
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: packages
      - name: Build
        run: yarn docs build
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY_NEXT }}
          publish_dir: docs/.vuepress/dist
          publish_branch: master
          external_repository: koishijs/next
          force_orphan: true
