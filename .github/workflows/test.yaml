name: Test

on:
  push:
    paths-ignore:
      - docs/**
  pull_request:
    paths-ignore:
      - docs/**

env:
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo
        ports:
          - 27017
        # https://stackoverflow.com/questions/66317184/github-actions-cannot-connect-to-mongodb-service
        options: --health-cmd "mongo" --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          MONGO_INITDB_ROOT_USERNAME: koishi
          MONGO_INITDB_ROOT_PASSWORD: koishi@114514
      mysql57:
        image: mysql:5.7
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          MYSQL_USER: koishi
          MYSQL_DATABASE: koishi
          MYSQL_PASSWORD: koishi@114514
          MYSQL_ROOT_PASSWORD: password
      maria10:
        image: mariadb:10.5
        ports:
          - 3307:3306
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          MYSQL_USER: koishi
          MYSQL_DATABASE: koishi
          MYSQL_PASSWORD: koishi@114514
          MYSQL_ROOT_PASSWORD: password
#      mysql8:
#        image: mysql:8
#        ports:
#          - 3308:3306
#        env:
#          MYSQL_PASSWORD: koishi@114514
#          MYSQL_USER: koishi
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      DB_DATABASE: koishi
      DB_USERNAME: koishi
      DB_PASSWORD: koishi@114514
    steps:
      - name: test service is start
        run: |
          mysqladmin ping -h"127.0.0.1" -P"3307" --silent
          mysqladmin ping -h"127.0.0.1" -P"3308" --silent
      - name: Check out
        uses: actions/checkout@v1
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Create .npmrc
        run: 'echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}" > .npmrc'
      - name: Install
        run: yarn
      - name: Build
        run: yarn build:ci
      - name: Lint
        run: yarn lint
      - name: Unit Test
        run: yarn test:json
      - name: Report Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/coverage-final.json
          name: codecov
      - name: Publish
        run: yarn pub
